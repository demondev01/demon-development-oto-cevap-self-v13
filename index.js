const { Client } = require('discord.js-selfbot-v13'); 
const axios = require('axios'); 

const client = new Client({
    checkUpdate: false,
    intents: [
        "GUILDS",
        "GUILD_MESSAGES",
        "DIRECT_MESSAGES",
        "MESSAGE_CONTENT"
    ]
});

const myId = "SÄ°ZÄ°N IDNÄ°Z"; 
const WEBHOOK_URL = "BURAYA LOG WEBHOOK URL";


// Buraya Sizin MesajÄ±nÄ±zÄ± YanÄ±tladÄ±klarÄ±nda Hangi Tepkileri Vermesini Ä°stiyorsanÄ±z YazÄ±n
const mentionTrigger = { react: "ðŸ‘‹" };

// Normal tetikleyiciler
const triggers = {
    // Buradaki Tetikleyiciler Opsiyoneldir DeÄŸiÅŸtirebilirsiniz
    // Buradaki "sa" Yazan Yeri DeÄŸiÅŸtirirseniz Tetikleyiciyi DeÄŸiÅŸtirmiÅŸ Olursunuz
    // Buradaki reply: "as" Yazan KÄ±sÄ±m Tetikleyici KullanÄ±lÄ±nca VericeÄŸi CevaptÄ±r 
    "sa": { reply: "as", react: "ðŸ‘‹" },
    "selam": { reply: "aleykÃ¼m selam", react: "" },
    "merhaba": { reply: "", react: "ðŸ˜Š" },
    "naber": { reply: "iyi senden?", react: "ðŸ˜Ž" },
    "gÃ¼naydÄ±n": { reply: "sana da gÃ¼naydÄ±n ðŸŒž", react: "ðŸŒž" },
    "iyi geceler": { reply: "tatlÄ± rÃ¼yalar ðŸŒ™", react: "ðŸŒ™" },
    "bb": { reply: "gÃ¶rÃ¼ÅŸÃ¼rÃ¼z ðŸ‘‹", react: "" } // react KÄ±sÄ±mlarÄ±nÄ± BoÅŸ BÄ±rakabilirsiniz
};

client.on('ready', () => {
    console.log(`${client.user.tag} giriÅŸ yaptÄ±!`);
});

client.on('messageCreate', async (message) => {
    if (message.author.id === myId) return;
    if (message.author.bot) return;

    const content = message.content.toLowerCase().trim();
    let triggerName = null;
    let trigger = null;


    if (message.mentions.has(myId)) {
        trigger = mentionTrigger;
        triggerName = "Mention";
    } else {
        for (let key in triggers) {
            if (content.startsWith(key)) { 
                trigger = triggers[key];
                triggerName = key;
                break;
            }
        }
    }

    if (!trigger) return;


    if (trigger.react) {
        try {
            await message.react(trigger.react);
        } catch (err) {
            console.error("Tepki eklenemedi:", err.message);
        }
    }


    if (trigger.reply && triggerName !== "Mention") {
        message.reply(trigger.reply).catch(err => console.error("Reply hatasÄ±:", err.message));
    }


    let location = "Bilinmeyen kanal";
    let type = "Mesaj";

    if (message.guild) {
        location = `Sunucu: **${message.guild.name}** (#${message.channel.name})`;
        type = "Sunucu MesajÄ±";
    } else if (message.channel.type === "DM") {
        location = `DM â†’ KullanÄ±cÄ±: **${message.author.tag}** (ID: ${message.author.id})`;
        type = "DM MesajÄ±";
    }

    const embed = {
        title: `${type} Tespit Edildi`,
        description: `**Tetikleyici:** ${triggerName}\n**Mesaj Ä°Ã§eriÄŸi:**\n\`\`\`${message.content}\`\`\`\n**Konum:** ${location}\n**KullanÄ±cÄ±:** <@${message.author.id}> (${message.author.tag})`,
        color: 0x2f3136,
        thumbnail: { url: message.author.displayAvatarURL({ format: "png", size: 1024 }) },
        footer: { text: `Demon Development Auto Cevap | ${new Date().toLocaleString()}` },
        timestamp: new Date()
    };

    try {
        await axios.post(WEBHOOK_URL, { username: "AutoCevap Log", embeds: [embed] });
    } catch (err) {
        console.error("Webhook gÃ¶nderilemedi:", err.message);
    }
});

client.login("SÄ°ZÄ°N TOKENÄ°NÄ°Z");
